// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VetExercise.Persistent;

namespace VetExercise.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210217104141_inherit_3")]
    partial class inherit_3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("CaretakerPet", b =>
                {
                    b.Property<long>("caretakersId")
                        .HasColumnType("bigint");

                    b.Property<long>("petsId")
                        .HasColumnType("bigint");

                    b.HasKey("caretakersId", "petsId");

                    b.HasIndex("petsId");

                    b.ToTable("CaretakerPet");
                });

            modelBuilder.Entity("VetExercise.DataModels.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("cityId")
                        .HasColumnType("bigint");

                    b.Property<string>("housenumber")
                        .HasColumnType("text");

                    b.Property<string>("street")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("cityId");

                    b.ToTable("addresses");
                });

            modelBuilder.Entity("VetExercise.DataModels.Caretaker", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("addressId")
                        .HasColumnType("bigint");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("addressId");

                    b.ToTable("caretakers");
                });

            modelBuilder.Entity("VetExercise.DataModels.City", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<int>("zip")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("cities");
                });

            modelBuilder.Entity("VetExercise.DataModels.Pet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("age")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<long?>("vetId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("vetId");

                    b.ToTable("pets");
                });

            modelBuilder.Entity("VetExercise.DataModels.Vet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("addressId")
                        .HasColumnType("bigint");

                    b.Property<string>("cvr")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("addressId");

                    b.ToTable("vets");
                });

            modelBuilder.Entity("VetExercise.DataModels.Cat", b =>
                {
                    b.HasBaseType("VetExercise.DataModels.Pet");

                    b.Property<int>("lifeCount")
                        .HasColumnType("integer");

                    b.ToTable("cats");
                });

            modelBuilder.Entity("VetExercise.DataModels.Dog", b =>
                {
                    b.HasBaseType("VetExercise.DataModels.Pet");

                    b.Property<int>("barkPitch")
                        .HasColumnType("integer");

                    b.ToTable("dogs");
                });

            modelBuilder.Entity("CaretakerPet", b =>
                {
                    b.HasOne("VetExercise.DataModels.Caretaker", null)
                        .WithMany()
                        .HasForeignKey("caretakersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VetExercise.DataModels.Pet", null)
                        .WithMany()
                        .HasForeignKey("petsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VetExercise.DataModels.Address", b =>
                {
                    b.HasOne("VetExercise.DataModels.City", "city")
                        .WithMany("addresses")
                        .HasForeignKey("cityId");

                    b.Navigation("city");
                });

            modelBuilder.Entity("VetExercise.DataModels.Caretaker", b =>
                {
                    b.HasOne("VetExercise.DataModels.Address", "address")
                        .WithMany("caretakers")
                        .HasForeignKey("addressId");

                    b.Navigation("address");
                });

            modelBuilder.Entity("VetExercise.DataModels.Pet", b =>
                {
                    b.HasOne("VetExercise.DataModels.Vet", "vet")
                        .WithMany("pets")
                        .HasForeignKey("vetId");

                    b.Navigation("vet");
                });

            modelBuilder.Entity("VetExercise.DataModels.Vet", b =>
                {
                    b.HasOne("VetExercise.DataModels.Address", "address")
                        .WithMany("vets")
                        .HasForeignKey("addressId");

                    b.Navigation("address");
                });

            modelBuilder.Entity("VetExercise.DataModels.Cat", b =>
                {
                    b.HasOne("VetExercise.DataModels.Pet", null)
                        .WithOne()
                        .HasForeignKey("VetExercise.DataModels.Cat", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VetExercise.DataModels.Dog", b =>
                {
                    b.HasOne("VetExercise.DataModels.Pet", null)
                        .WithOne()
                        .HasForeignKey("VetExercise.DataModels.Dog", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VetExercise.DataModels.Address", b =>
                {
                    b.Navigation("caretakers");

                    b.Navigation("vets");
                });

            modelBuilder.Entity("VetExercise.DataModels.City", b =>
                {
                    b.Navigation("addresses");
                });

            modelBuilder.Entity("VetExercise.DataModels.Vet", b =>
                {
                    b.Navigation("pets");
                });
#pragma warning restore 612, 618
        }
    }
}
